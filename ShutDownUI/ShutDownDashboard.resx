<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>